---
import Layout from "../layouts/Layout.astro";
import { Landing } from "../components/Landing";
import { Nav } from "../components/Nav";
import { PropSlalom } from "../components/PropSlalom";
import { ChefsTable } from "../components/ChefsTable";
import { InterstitialImg } from "../components/InterstitialImg";
import { Row } from "../components/Row";
import { StaffInfo } from "../components/StaffInfo";
import { Footer } from "../components/Footer";
// import Banner from "../components/Banner";
import client from "../../tina/__generated__/client";
import type {
  PropsConnection,
  StaffConnection,
  Staff,
  DocumentConnection,
  Props,
} from "../../tina/__generated__/types";

const propResponse = await client.queries.propsConnection();
const PropsArr = propResponse.data.propsConnection.edges?.map((item) => {
  return item?.node as Props;
}) as Props[];

const staffResponse = await client.queries.staffConnection();
const StaffArr = staffResponse.data.staffConnection.edges?.map((item) => {
  return item?.node as Staff;
}) as Staff[];

const PropData = PropsArr?.map((prop) => {
  return {
    title: prop.title,
    body: prop.body,
    link_url: prop.link_url,
    link_text: prop.link_text,
    image: prop.image,
    image_secondary: prop.image_secondary,
    image_alt: prop.image_alt,
    image_bg: prop.image_bg,
  };
});

const StaffData = StaffArr?.map((staff) => {
  return {
    title: staff.title,
    icon: staff.icon ?? undefined,
    name: staff.name,
    body: staff.body,
    image: staff.image ?? undefined,
    order: staff.order,
  };
});

// console.log(StaffData);

function determineSide(index: number) {
  return index % 2 == 0 ? "right" : "left";
}

export interface StaffDataType {
  title: string;
  icon: string | undefined;
  name: string;
  body: any;
  image: string | undefined;
  order: number;
}
---

<Layout title="Delicieux - A French Restaurant">
  <!-- <Banner /> -->
  <Nav client:load />
  <main>
    <section class="space-y-12 sm:space-y-24">
      <Landing />
      <img
        src="/fancyLines1.png"
        alt="fancy lines"
        class="w-[90%] md:max-w-[550px] h-auto m-auto"
      />
    </section>
    <section>
      <PropSlalom prop={PropData} client:load />
    </section>
    <section>
      <ChefsTable />
    </section>
    <InterstitialImg label="Restaurant" src="/interstitial.jpg" />
    <section id="about" class="pb-16">
      {
        StaffData?.sort(
          (a: StaffDataType, b: StaffDataType) => a.order - b.order
        ).map((person) => {
          return (
            <Row side={determineSide(person.order)}>
              <StaffInfo
                person={person}
                side={determineSide(person.order)}
                client:load
              />
            </Row>
          );
        })
      }
    </section>
  </main>
  <Footer />
</Layout>

<style>
  section {
    @apply max-w-7xl m-auto;
  }
</style>
